<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="27" height="27" viewBox="-13.5 -13.5 27 27" style="vertical-align: middle;">
	<defs>
		<clipPath id="bgclip">
			<circle cx="0" cy="0" r="13"/>
		</clipPath>
	</defs>
	<g>
		<image width="27" height="27" x="-13.5" y="-13.5" xlink:href="../earth-330301.svg" clip-path="url(#bgclip)" preserveAspectRatio="xMidYMid slice"/>
		<!--preserveAspectRatio funktioniert so in Firefox, aber nicht in WebKit! -->
	</g>
	<circle cx="0" cy="0" r="13" transform="rotate(-90)" class="progresspie-background" style="stroke: rgb(0, 0, 128); fill: none; stroke-width: 1px;"/>
	<path d="M0,-12 A12,12 0 1,1 -11.412678195541844,-3.708203932499368" class="progresspie-foreground" style="fill: none; stroke: rgb(0, 0, 128); stroke-width: 3px; stroke-linecap: butt;"/>
	
	<!-- 
	     Soll der Clip Path vom Content Plugin selbst gesetzt werden? Oder soll das Content-Plugin nur deklarieren,
	     dass es ggf. über den Kreis hinaus zeichnen könnte und progressPie selbst daher vorsichtshalber diesen clip path
	     setzen sollte?
	     Oder soll das Clipping einfach bei Content Plug-ins immer gesetzt werden?
	     
	     Für die erste Variante spricht, dass man dem Content Plugin mehr Freiheiten gibt:
	     a) Es könnte auch ein anderes Clipping definieren, z.B. einen kleineren Kreis, der aufs Innere einer Ring-Grafik beschränkt ist
	     genauso wie die ErrorIcons intern gefüllte Kreise zeichnen, könnte dann auch eine solche reduzierte kreisförmige Grafik
	     erzeugt werden.
	     b) Man muss sich nicht auf clipPath beschränken, sondern könnte auch andere Definitions wie Masken oder Gradients erlauben.
	     
	     => Allgemein: Ein Content Plug-in sollte neben reinem Content einfach auch Definitions erzeugen dürfen, die es dann
	     in seinem Content verwenden kann.
	     
	     -->
</svg>
