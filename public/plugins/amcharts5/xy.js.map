{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","isMeasured","themeTags","icon","x","y","this","_defaultThemes","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","get","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","getPrivate","delta","dispose","local","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","cursor","snapToSeries","isHidden","isHiding","startIndex","endIndex","i","dataItem","dataItems","tooltipDataItem","point","distance","Math","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","grip","setPrivate","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","value","newIndex","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","force","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","length","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","closest","closestPoint","w","h","plotT","_display","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","count","sort","a","b","centerY","top","bottom","min","_fy","reverse","max","XYChart","className","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","arrangeTooltips","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","layer","exportable","snapToSeriesBy","strokeDasharray","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","translate","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","extraMin","extraMax","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_updateChildren","_handleSyncWith","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_downPoints","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","j","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","seriesMin","seriesMax","isShowing","range","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","_fixZoomFactor","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","firstDate","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","previousPosition","minDifference","realValue","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\t\t\t\t\t\t\tlet delta = wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this._otherCharts;\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t})\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t})\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.on(\"frameended\", ()=>{\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n\tminFinal?: number;\n\tmaxFinal?: number;\n\tselectionMin?: number;\n\tselectionMax?: number;\n\tselectionMinFinal?: number;\n\tselectionMaxFinal?: number;\n\tselectionStepFinal?: number;\n\tstep?: number;\n\tstepDecimalPlaces?: number;\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `0` (zero) to `1` (one), meaning start and end of the cell.\n\t *\n\t * If not set, it will use cell's start tiemstamp.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position) + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * this.baseDuration()), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\tindex?: number\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\r\n\t\t\tlet value = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime() - intervalDuration;\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\tdurationFormat: string;\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\t\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\tlowX0?: number;\n\tlowY0?: number;\n\tlowX1?: number;\n\tlowY1?: number;\n\n\thighX0?: number;\n\thighY0?: number;\n\thighX1?: number;\n\thighY1?: number;\n\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n\n\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\tcolumns: ListTemplate<Candlestick>\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}